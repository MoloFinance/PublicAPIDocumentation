# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19

jobs:
  build:
    docker:
    - image: circleci/ruby:stretch-node

    working_directory: ~/repo

    steps:
    # Checkout the code from the branch into the working_directory
    - checkout
    # Log the current branch
    - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
    # Restore local dependencies from cache
    - restore_cache:
        keys:
        - v2-dependencies-{{ checksum "Gemfile" }}
        # fallback to using the latest cache if no exact match is found
        - v2-dependencies-
    # Install bundler
    - run:
        name: Install bundler
        command: gem install bundler

    # Install project dependencies
    - run:
        name: Install local dependencies
        command: bundle install
    # Cache local dependencies if they don't exist
    - save_cache:
        key: v2-dependencies-{{ checksum "Gemfile" }}
        paths:
        - node_modules

    - run:
        name: Build
        command: bundle exec middleman build --clean

    - save_cache:
        key: v2-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - build

  deploy:
    docker:
    - image: circleci/ruby:stretch-node

    working_directory: ~/repo

    steps:
    # Log the current branch
    - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
    # Restore cache from the build job which contains the
    # build folder that needs to be deployed
    - restore_cache:
        key: v2-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
    - aws-cli/setup:
        aws-access-key-id: AWS_ACCESS_KEY_ID
        aws-secret-access-key: AWS_SECRET_ACCESS_KEY
    # Set the signature version for the S3 auth
    - run:
        name: Setting Signature Version 4 for S3 Request Authentication
        command: aws configure set default.s3.signature_version s3v4


    # Deploy to the S3 bucket corresponding to the current branch
    - run:
        name: Deploy to S3
        command: |
          if [ "${CIRCLE_BRANCH}" == "production" ]; then
              aws --region eu-west-2 s3 sync build/ s3://docs.molofinance.com/ --delete
              aws cloudfront create-invalidation --distribution-id E2N5PLSNPURDT5 --paths '/*'
          elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              aws --region eu-west-2 s3 sync build/ s3://dev.docs.molofinance.com/ --delete
              aws configure set preview.cloudfront true
              aws cloudfront create-invalidation --distribution-id EEGJ6DEZI83LH --paths '/*'
          fi

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
    - build
    # The deploy job will only run on the filtered branches and
    # require the build job to be successful before it starts
    - deploy:
        requires:
        - build
        filters:
          branches:
            only:
            - develop
            - production
